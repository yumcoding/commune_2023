// flexbox
$flex-map: (
	start: flex-start,
	end: flex-end,
	between: space-between,
	around: space-around,
	stretch: stretch,
	center: center,
);

@function _get-flex-value($key) {
	@return map-get($flex-map, $key);
}

@mixin flexbox($jc: center, $ai: center) {
	display: flex;
	align-items: _get-flex-value($ai);
	justify-content: _get-flex-value($jc);
}

@mixin column-flexbox($jc: center, $ai: center) {
	display: flex;
	flex-direction: column;
	align-items: _get-flex-value($ai);
	justify-content: _get-flex-value($jc);
}

// grid
@mixin grid($num, $gap) {
	display: grid;
	grid-template-columns: repeat($num, 1fr);
	grid-gap: $gap;
}

// position
@mixin pos-center-x($type: absolute) {
	@if ($type == "absolute" or $type == "fixed") {
		position: $type;
		left: 50%;
		transform: translateX(-50%);
	}
}

@mixin pos-center-y($type: absolute) {
	@if ($type == "absolute" or $type == "fixed") {
		position: $type;
		top: 50%;
		transform: translateY(-50%);
	}
}

@mixin pos-center($type: absolute) {
	@if ($type == "absolute" or $type == "fixed") {
		position: $type;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
}

// layout -------------------------------------

@mixin layout() {
	margin: $sm-margin;
	max-width: $content-max-width;

	@media screen and (min-width: $md-breakpoint) {
		margin: $md-margin;
	}

	@media screen and (min-width: $lg-breakpoint) {
		margin: $lg-margin;
	}
}

@mixin modalContentLayout() {
	width: 100vw;
	height: 100vh;
	background-color: $white;
	position: relative;

	@media screen and (min-width: $md-breakpoint) {
		width: 480px;
		height: 460px;
		padding: 16px 20px 18px;
		border-radius: 6px;
		box-shadow: rgba(0, 0, 0, 0.12) 0px 0px 6px 0px;
	}

	&.isPage {
		z-index: $full-modal-level;
		@media screen and (min-width: $md-breakpoint) {
			z-index: unset;
			box-shadow: unset;

			@include pos-center();
		}

		.closeBtn {
			@media screen and (min-width: $md-breakpoint) {
				display: none;
			}
		}
	}
}

@mixin modalContentHeader() {
	position: relative;
	width: 100%;
	height: 44px;
	border-bottom: 1px solid $border;
	padding: 0 16px;

	h1 {
		@include pos-center();
		@include truncate();
		padding: 0 16px;

		font-size: 18px;
		font-weight: 700;
		letter-spacing: -0.5px;
		color: $text-primary;
	}

	@media screen and (min-width: $md-breakpoint) {
		height: 33px;
		padding: 0;
		border-bottom: 1px solid transparent;
		margin: 0 0 15px 0;

		h1 {
			position: unset;
			transform: unset;
			padding: 0;
			line-height: 27px;
		}
	}
}

@mixin modalContentCloseBtn() {
	@include flexbox(center, center);
	@include pos-center-y();
	left: 16px;

	width: 25px;
	height: 25px;
	padding: 0;
	color: $pink;

	svg {
		position: relative;
		top: 0.5px;
	}

	@media screen and (min-width: $md-breakpoint) {
		left: unset;
		top: 12px;
		right: 0;
		width: 26px;
		height: 26px;
		border-radius: 50%;
		color: $text-secondary;
		background-color: rgba(0, 0, 0, 0.07);
		transition: background-color 300ms ease-in;

		&:hover {
			background-color: rgba(0, 0, 0, 0.1);
		}

		svg {
			width: 16px;
			height: 16px;
		}
	}
}

@mixin bookDetailSection() {
	padding: 15px 0;

	@media screen and (min-width: $md-breakpoint) {
		padding: 20px 0 25px;
	}

	@media screen and (min-width: $lg-breakpoint) {
		padding: 35px 0;
	}
}

// utils
@mixin truncate() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin multipleLineTruncate($line) {
	text-overflow: ellipsis;
	overflow: hidden;
	word-break: break-word;

	display: -webkit-box;
	-webkit-line-clamp: $line;
	-webkit-box-orient: vertical;
}

@mixin smOnly {
	@media screen and (min-width: $md-breakpoint) {
		display: none !important;
	}
}

@mixin smHidden {
	display: none !important;

	@media screen and (min-width: $md-breakpoint) {
		display: block !important;
	}
}

/* visually hide semantic tags */
@mixin visuallyHidden() {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	padding: 0 !important;
	margin: -1px !important;
	overflow: hidden !important;
	clip: rect(0, 0, 0, 0) !important;
	white-space: nowrap !important;
	border: 0 !important;
}
